version: "3.8"

services:
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: diningdb
      POSTGRES_USER: dininguser
      POSTGRES_PASSWORD: diningpass
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./DiningReviewRestaurantSpring
    container_name: spring-backend
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/diningdb
      SPRING_DATASOURCE_USERNAME: dininguser
      SPRING_DATASOURCE_PASSWORD: diningpass
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_PROFILES_ACTIVE: dev
    ports:
      - "8080:8080"
    networks:
      - app-network

  frontend:
    build:
      context: ./DiningReviewRestaurantReact
    container_name: react-frontend
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge